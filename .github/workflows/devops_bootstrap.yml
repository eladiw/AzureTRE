name: Deploy mgmt infra and dev container build and push

on:
  pull_request:
    paths:
      - devops/**
  push:
    branches: [ develop, main ]
    paths:
      - devops/**
  workflow_dispatch:

jobs:
  devops_bootstrap:
    name: Build Dev Container
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Terraform
        uses: little-core-labs/install-terraform@v2.0.0
        with:
            version: 0.15.4
      


      - name: Deploy mgmt Infra
        shell: bash
        env:
          TF_VAR_tre_id: ${{ secrets.TRE_ID }}
          TF_VAR_state_storage: ${{ secrets.STATE_STORAGE_ACCOUNT_NAME }}
          TF_VAR_mgmt_res_group: ${{ secrets.MGMT_RESOURCE_GROUP }}
          TF_VAR_state_container: "tfstate"
          TF_VAR_location: "westeurope"
          TF_VAR_acr_name: ${{ secrets.ACR_NAME }}
          TF_VAR_address_space: "10.1.0.0/16"
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: |
            export ARM_CLIENT_ID=$(echo "$AZURE_CREDENTIALS" | jq -r '.clientId')
            export ARM_CLIENT_SECRET=$(echo "$AZURE_CREDENTIALS" | jq -r '.clientSecret')
            export ARM_SUBSCRIPTION_ID=$(echo "$AZURE_CREDENTIALS" | jq -r '.subscriptionId')
            export ARM_TENANT_ID=$(echo "$AZURE_CREDENTIALS" | jq -r '.tenantId')

            echo $GITHUB_REF
            if [ $GITHUB_EVENT_NAME == 'push' ] && [ $GITHUB_REF == 'refs/heads/develop' ]; then
              TF_VAR_image_tag='develop-latest'
            elif [ $GITHUB_EVENT_NAME == 'push' ] && [ $GITHUB_REF == 'refs/heads/main' ]; then
              TF_VAR_image_tag='main-latest'
            else
              TF_VAR_image_tag=$GITHUB_SHA
            fi

            export TF_VAR_image_tag
            export USE_ENV_VARS_NOT_FILES=true

            make bootstrap
            make mgmt-deploy